generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model tproject {
  id              Int               @id @default(autoincrement()) @db.UnsignedInt
  name            String            @db.VarChar(255)
  tprojectuser    tprojectuser[]
  tprojectversion tprojectversion[]
}

model tprojectuser {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  user_id    Int?      @db.UnsignedInt
  project_id Int?      @db.UnsignedInt
  tuser      tuser?    @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "tprojectuser_ibfk_1")
  tproject   tproject? @relation(fields: [project_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "tprojectuser_ibfk_2")

  @@index([project_id], map: "project_id")
  @@index([user_id], map: "user_id")
}

model tuser {
  id           Int            @id @default(autoincrement()) @db.UnsignedInt
  email        String         @db.VarChar(255)
  password     String         @db.VarChar(255)
  username     String         @db.VarChar(255)
  firstname    String?        @db.VarChar(255)
  lastname     String?        @db.VarChar(255)
  tprojectuser tprojectuser[]
  tsession     tsession[]
}

model tsession {
  session   String    @id @db.Char(64)
  user_id   Int?      @db.UnsignedInt
  timestamp DateTime? @default(now()) @db.Timestamp(0)
  tuser     tuser?    @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "tsession_ibfk_1")

  @@index([user_id], map: "user_id")
}

model tprojectversion {
  id                  Int                   @id @default(autoincrement()) @db.UnsignedInt
  project_id          Int?                  @db.UnsignedInt
  versionNumber       Int                   @db.UnsignedInt
  timestamp           DateTime?             @default(now()) @db.Timestamp(0)
  songBPM             Int?                  @db.UnsignedSmallInt
  songKey             String?               @db.VarChar(10)
  tproject            tproject?             @relation(fields: [project_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "tprojectversion_ibfk_1")
  tprojectversionfile tprojectversionfile[]

  @@unique([project_id, versionNumber], map: "project_id")
}

model tprojectversionfile {
  id                String           @id @db.Char(128)
  projectversion_id Int?             @db.UnsignedInt
  type              String?          @db.Char(3)
  tprojectversion   tprojectversion? @relation(fields: [projectversion_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "tprojectversionfile_ibfk_1")

  @@index([projectversion_id], map: "projectversion_id")
}
